b655b13b0cfed50fa50a5ba673c79eb1
/* istanbul ignore next */
function cov_2fi51es89t() {
  var path = "C:\\GitHub\\Svg-Mcp-Server\\src\\core\\SvgDocumentProcessor.ts";
  var hash = "2af511f90b8ac44f46686b33a0efcbd83c4ed70c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\GitHub\\Svg-Mcp-Server\\src\\core\\SvgDocumentProcessor.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 42
        }
      },
      "1": {
        start: {
          line: 13,
          column: 26
        },
        end: {
          line: 13,
          column: 36
        }
      },
      "2": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 14,
          column: 25
        }
      },
      "3": {
        start: {
          line: 15,
          column: 25
        },
        end: {
          line: 15,
          column: 27
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "5": {
        start: {
          line: 17,
          column: 29
        },
        end: {
          line: 24,
          column: 13
        }
      },
      "6": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 32,
          column: 13
        }
      },
      "7": {
        start: {
          line: 26,
          column: 35
        },
        end: {
          line: 26,
          column: 72
        }
      },
      "8": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 50
        }
      },
      "9": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 54
        }
      },
      "10": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 31,
          column: 17
        }
      },
      "11": {
        start: {
          line: 30,
          column: 20
        },
        end: {
          line: 30,
          column: 101
        }
      },
      "12": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 33,
          column: 60
        }
      },
      "13": {
        start: {
          line: 34,
          column: 29
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "14": {
        start: {
          line: 36,
          column: 66
        },
        end: {
          line: 36,
          column: 73
        }
      },
      "15": {
        start: {
          line: 43,
          column: 35
        },
        end: {
          line: 43,
          column: 57
        }
      },
      "16": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 81
        }
      },
      "17": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 72
        }
      },
      "18": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 24
        }
      },
      "19": {
        start: {
          line: 52,
          column: 23
        },
        end: {
          line: 52,
          column: 25
        }
      },
      "20": {
        start: {
          line: 53,
          column: 25
        },
        end: {
          line: 53,
          column: 27
        }
      },
      "21": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "22": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 58
        }
      },
      "23": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "24": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 59
        }
      },
      "25": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 64,
          column: 10
        }
      },
      "26": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 72,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 18
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 32
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 36,
            column: 60
          },
          end: {
            line: 36,
            column: 61
          }
        },
        loc: {
          start: {
            line: 36,
            column: 66
          },
          end: {
            line: 36,
            column: 73
          }
        },
        line: 36
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 37
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 51
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 25
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 66
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 20
          },
          end: {
            line: 20,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 20
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 69
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 20
          },
          end: {
            line: 21,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 20
          },
          end: {
            line: 21,
            column: 45
          }
        }, {
          start: {
            line: 21,
            column: 49
          },
          end: {
            line: 21,
            column: 72
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 20
          },
          end: {
            line: 22,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 20
          },
          end: {
            line: 22,
            column: 30
          }
        }, {
          start: {
            line: 22,
            column: 34
          },
          end: {
            line: 22,
            column: 55
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 20
          },
          end: {
            line: 23,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 20
          },
          end: {
            line: 23,
            column: 36
          }
        }, {
          start: {
            line: 23,
            column: 40
          },
          end: {
            line: 23,
            column: 73
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 32,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 32,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 31,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 31,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 28
          },
          end: {
            line: 35,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 60
          },
          end: {
            line: 35,
            column: 65
          }
        }, {
          start: {
            line: 35,
            column: 68
          },
          end: {
            line: 35,
            column: 118
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 35,
            column: 68
          },
          end: {
            line: 35,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 101
          },
          end: {
            line: 35,
            column: 109
          }
        }, {
          start: {
            line: 35,
            column: 112
          },
          end: {
            line: 35,
            column: 118
          }
        }],
        line: 35
      },
      "8": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "9": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\GitHub\\Svg-Mcp-Server\\src\\core\\SvgDocumentProcessor.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\GitHub\\Svg-Mcp-Server\\src\\core\\SvgDocumentProcessor.ts"],
      sourcesContent: ["/**\n * SVG Document Processor\n */\n\nimport { SvgDocument, SvgAnyElement, ViewBox, SvgValidationError } from '../types/svg.js';\nimport { SvgRenderer } from './SvgRenderer.js';\nimport { logger } from '../utils/logger.js';\n\nexport interface SvgDocumentSpec {\n  viewBox: ViewBox;\n  elements: SvgAnyElement[];\n  width?: number;\n  height?: number;\n  title?: string;\n  description?: string;\n  optimize?: boolean;\n  validate?: boolean;\n  generateMetadata?: boolean;\n}\n\nexport interface ProcessingResult {\n  document: SvgDocument;\n  svg: string;\n  warnings: string[];\n  errors: string[];\n  metadata: DocumentMetadata;\n  processingTime: number;\n}\n\nexport interface DocumentMetadata {\n  complexity: 'low' | 'medium' | 'high';\n  features: string[];\n  accessibility: {\n    hasTitle: boolean;\n    hasDescription: boolean;\n  };\n  compliance?: string;\n}\n\nexport class SvgDocumentProcessor {\n  private readonly renderer: SvgRenderer;\n\n  constructor() {\n    this.renderer = new SvgRenderer();\n  }\n\n  async processDocument(spec: SvgDocumentSpec): Promise<ProcessingResult> {\n    const startTime = Date.now();\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    try {\n      const document: SvgDocument = {\n        viewBox: spec.viewBox,\n        elements: spec.elements,\n        ...(spec.width !== undefined && { width: spec.width }),\n        ...(spec.height !== undefined && { height: spec.height }),\n        ...(spec.title && { title: spec.title }),\n        ...(spec.description && { description: spec.description })\n      };\n\n      if (spec.validate !== false) {\n        const validation = await this.validateDocument(document);\n        errors.push(...validation.errors);\n        warnings.push(...validation.warnings);\n        \n        if (!validation.valid) {\n          throw new SvgValidationError('Document validation failed', { errors, warnings });\n        }\n      }\n\n      const svg = await this.renderer.render(document);\n      \n      const metadata: DocumentMetadata = {\n        complexity: document.elements.length < 10 ? 'low' : document.elements.length < 100 ? 'medium' : 'high',\n        features: [...new Set(document.elements.map(el => el.type))],\n        accessibility: {\n          hasTitle: !!document.title,\n          hasDescription: !!document.description\n        },\n        compliance: 'svg20'\n      };\n\n      const processingTime = Date.now() - startTime;\n\n      return { document, svg, warnings, errors, metadata, processingTime };\n\n    } catch (error) {\n      logger.error('Document processing failed', { error, spec });\n      throw error;\n    }\n  }\n\n  async validateDocument(document: SvgDocument): Promise<{\n    valid: boolean;\n    errors: string[];\n    warnings: string[];\n  }> {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    if (document.viewBox.width <= 0) {\n      errors.push('ViewBox width must be positive');\n    }\n    if (document.viewBox.height <= 0) {\n      errors.push('ViewBox height must be positive');\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors,\n      warnings\n    };\n  }\n\n  getProcessingStats(): {\n    totalDocuments: number;\n    totalProcessingTime: number;\n    averageProcessingTime: number;\n  } {\n    // Simple stats for now\n    return {\n      totalDocuments: 0,\n      totalProcessingTime: 0,\n      averageProcessingTime: 0\n    };\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2af511f90b8ac44f46686b33a0efcbd83c4ed70c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2fi51es89t = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2fi51es89t();
/**
 * SVG Document Processor
 */
import { SvgValidationError } from '../types/svg.js';
import { SvgRenderer } from './SvgRenderer.js';
import { logger } from '../utils/logger.js';
export class SvgDocumentProcessor {
  renderer;
  constructor() {
    /* istanbul ignore next */
    cov_2fi51es89t().f[0]++;
    cov_2fi51es89t().s[0]++;
    this.renderer = new SvgRenderer();
  }
  async processDocument(spec) {
    /* istanbul ignore next */
    cov_2fi51es89t().f[1]++;
    const startTime =
    /* istanbul ignore next */
    (cov_2fi51es89t().s[1]++, Date.now());
    const errors =
    /* istanbul ignore next */
    (cov_2fi51es89t().s[2]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_2fi51es89t().s[3]++, []);
    /* istanbul ignore next */
    cov_2fi51es89t().s[4]++;
    try {
      const document =
      /* istanbul ignore next */
      (cov_2fi51es89t().s[5]++, {
        viewBox: spec.viewBox,
        elements: spec.elements,
        ...(
        /* istanbul ignore next */
        (cov_2fi51es89t().b[0][0]++, spec.width !== undefined) &&
        /* istanbul ignore next */
        (cov_2fi51es89t().b[0][1]++, {
          width: spec.width
        })),
        ...(
        /* istanbul ignore next */
        (cov_2fi51es89t().b[1][0]++, spec.height !== undefined) &&
        /* istanbul ignore next */
        (cov_2fi51es89t().b[1][1]++, {
          height: spec.height
        })),
        ...(
        /* istanbul ignore next */
        (cov_2fi51es89t().b[2][0]++, spec.title) &&
        /* istanbul ignore next */
        (cov_2fi51es89t().b[2][1]++, {
          title: spec.title
        })),
        ...(
        /* istanbul ignore next */
        (cov_2fi51es89t().b[3][0]++, spec.description) &&
        /* istanbul ignore next */
        (cov_2fi51es89t().b[3][1]++, {
          description: spec.description
        }))
      });
      /* istanbul ignore next */
      cov_2fi51es89t().s[6]++;
      if (spec.validate !== false) {
        /* istanbul ignore next */
        cov_2fi51es89t().b[4][0]++;
        const validation =
        /* istanbul ignore next */
        (cov_2fi51es89t().s[7]++, await this.validateDocument(document));
        /* istanbul ignore next */
        cov_2fi51es89t().s[8]++;
        errors.push(...validation.errors);
        /* istanbul ignore next */
        cov_2fi51es89t().s[9]++;
        warnings.push(...validation.warnings);
        /* istanbul ignore next */
        cov_2fi51es89t().s[10]++;
        if (!validation.valid) {
          /* istanbul ignore next */
          cov_2fi51es89t().b[5][0]++;
          cov_2fi51es89t().s[11]++;
          throw new SvgValidationError('Document validation failed', {
            errors,
            warnings
          });
        } else
        /* istanbul ignore next */
        {
          cov_2fi51es89t().b[5][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2fi51es89t().b[4][1]++;
      }
      const svg =
      /* istanbul ignore next */
      (cov_2fi51es89t().s[12]++, await this.renderer.render(document));
      const metadata =
      /* istanbul ignore next */
      (cov_2fi51es89t().s[13]++, {
        complexity: document.elements.length < 10 ?
        /* istanbul ignore next */
        (cov_2fi51es89t().b[6][0]++, 'low') :
        /* istanbul ignore next */
        (cov_2fi51es89t().b[6][1]++, document.elements.length < 100 ?
        /* istanbul ignore next */
        (cov_2fi51es89t().b[7][0]++, 'medium') :
        /* istanbul ignore next */
        (cov_2fi51es89t().b[7][1]++, 'high')),
        features: [...new Set(document.elements.map(el => {
          /* istanbul ignore next */
          cov_2fi51es89t().f[2]++;
          cov_2fi51es89t().s[14]++;
          return el.type;
        }))],
        accessibility: {
          hasTitle: !!document.title,
          hasDescription: !!document.description
        },
        compliance: 'svg20'
      });
      const processingTime =
      /* istanbul ignore next */
      (cov_2fi51es89t().s[15]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_2fi51es89t().s[16]++;
      return {
        document,
        svg,
        warnings,
        errors,
        metadata,
        processingTime
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2fi51es89t().s[17]++;
      logger.error('Document processing failed', {
        error,
        spec
      });
      /* istanbul ignore next */
      cov_2fi51es89t().s[18]++;
      throw error;
    }
  }
  async validateDocument(document) {
    /* istanbul ignore next */
    cov_2fi51es89t().f[3]++;
    const errors =
    /* istanbul ignore next */
    (cov_2fi51es89t().s[19]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_2fi51es89t().s[20]++, []);
    /* istanbul ignore next */
    cov_2fi51es89t().s[21]++;
    if (document.viewBox.width <= 0) {
      /* istanbul ignore next */
      cov_2fi51es89t().b[8][0]++;
      cov_2fi51es89t().s[22]++;
      errors.push('ViewBox width must be positive');
    } else
    /* istanbul ignore next */
    {
      cov_2fi51es89t().b[8][1]++;
    }
    cov_2fi51es89t().s[23]++;
    if (document.viewBox.height <= 0) {
      /* istanbul ignore next */
      cov_2fi51es89t().b[9][0]++;
      cov_2fi51es89t().s[24]++;
      errors.push('ViewBox height must be positive');
    } else
    /* istanbul ignore next */
    {
      cov_2fi51es89t().b[9][1]++;
    }
    cov_2fi51es89t().s[25]++;
    return {
      valid: errors.length === 0,
      errors,
      warnings
    };
  }
  getProcessingStats() {
    /* istanbul ignore next */
    cov_2fi51es89t().f[4]++;
    cov_2fi51es89t().s[26]++;
    // Simple stats for now
    return {
      totalDocuments: 0,
      totalProcessingTime: 0,
      averageProcessingTime: 0
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmZpNTFlczg5dCIsImFjdHVhbENvdmVyYWdlIiwiU3ZnVmFsaWRhdGlvbkVycm9yIiwiU3ZnUmVuZGVyZXIiLCJsb2dnZXIiLCJTdmdEb2N1bWVudFByb2Nlc3NvciIsInJlbmRlcmVyIiwiY29uc3RydWN0b3IiLCJmIiwicyIsInByb2Nlc3NEb2N1bWVudCIsInNwZWMiLCJzdGFydFRpbWUiLCJEYXRlIiwibm93IiwiZXJyb3JzIiwid2FybmluZ3MiLCJkb2N1bWVudCIsInZpZXdCb3giLCJlbGVtZW50cyIsImIiLCJ3aWR0aCIsInVuZGVmaW5lZCIsImhlaWdodCIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJ2YWxpZGF0ZSIsInZhbGlkYXRpb24iLCJ2YWxpZGF0ZURvY3VtZW50IiwicHVzaCIsInZhbGlkIiwic3ZnIiwicmVuZGVyIiwibWV0YWRhdGEiLCJjb21wbGV4aXR5IiwibGVuZ3RoIiwiZmVhdHVyZXMiLCJTZXQiLCJtYXAiLCJlbCIsInR5cGUiLCJhY2Nlc3NpYmlsaXR5IiwiaGFzVGl0bGUiLCJoYXNEZXNjcmlwdGlvbiIsImNvbXBsaWFuY2UiLCJwcm9jZXNzaW5nVGltZSIsImVycm9yIiwiZ2V0UHJvY2Vzc2luZ1N0YXRzIiwidG90YWxEb2N1bWVudHMiLCJ0b3RhbFByb2Nlc3NpbmdUaW1lIiwiYXZlcmFnZVByb2Nlc3NpbmdUaW1lIl0sInNvdXJjZXMiOlsiQzpcXEdpdEh1YlxcU3ZnLU1jcC1TZXJ2ZXJcXHNyY1xcY29yZVxcU3ZnRG9jdW1lbnRQcm9jZXNzb3IudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTVkcgRG9jdW1lbnQgUHJvY2Vzc29yXG4gKi9cblxuaW1wb3J0IHsgU3ZnRG9jdW1lbnQsIFN2Z0FueUVsZW1lbnQsIFZpZXdCb3gsIFN2Z1ZhbGlkYXRpb25FcnJvciB9IGZyb20gJy4uL3R5cGVzL3N2Zy5qcyc7XG5pbXBvcnQgeyBTdmdSZW5kZXJlciB9IGZyb20gJy4vU3ZnUmVuZGVyZXIuanMnO1xuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnLi4vdXRpbHMvbG9nZ2VyLmpzJztcblxuZXhwb3J0IGludGVyZmFjZSBTdmdEb2N1bWVudFNwZWMge1xuICB2aWV3Qm94OiBWaWV3Qm94O1xuICBlbGVtZW50czogU3ZnQW55RWxlbWVudFtdO1xuICB3aWR0aD86IG51bWJlcjtcbiAgaGVpZ2h0PzogbnVtYmVyO1xuICB0aXRsZT86IHN0cmluZztcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIG9wdGltaXplPzogYm9vbGVhbjtcbiAgdmFsaWRhdGU/OiBib29sZWFuO1xuICBnZW5lcmF0ZU1ldGFkYXRhPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQcm9jZXNzaW5nUmVzdWx0IHtcbiAgZG9jdW1lbnQ6IFN2Z0RvY3VtZW50O1xuICBzdmc6IHN0cmluZztcbiAgd2FybmluZ3M6IHN0cmluZ1tdO1xuICBlcnJvcnM6IHN0cmluZ1tdO1xuICBtZXRhZGF0YTogRG9jdW1lbnRNZXRhZGF0YTtcbiAgcHJvY2Vzc2luZ1RpbWU6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBEb2N1bWVudE1ldGFkYXRhIHtcbiAgY29tcGxleGl0eTogJ2xvdycgfCAnbWVkaXVtJyB8ICdoaWdoJztcbiAgZmVhdHVyZXM6IHN0cmluZ1tdO1xuICBhY2Nlc3NpYmlsaXR5OiB7XG4gICAgaGFzVGl0bGU6IGJvb2xlYW47XG4gICAgaGFzRGVzY3JpcHRpb246IGJvb2xlYW47XG4gIH07XG4gIGNvbXBsaWFuY2U/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjbGFzcyBTdmdEb2N1bWVudFByb2Nlc3NvciB7XG4gIHByaXZhdGUgcmVhZG9ubHkgcmVuZGVyZXI6IFN2Z1JlbmRlcmVyO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMucmVuZGVyZXIgPSBuZXcgU3ZnUmVuZGVyZXIoKTtcbiAgfVxuXG4gIGFzeW5jIHByb2Nlc3NEb2N1bWVudChzcGVjOiBTdmdEb2N1bWVudFNwZWMpOiBQcm9taXNlPFByb2Nlc3NpbmdSZXN1bHQ+IHtcbiAgICBjb25zdCBzdGFydFRpbWUgPSBEYXRlLm5vdygpO1xuICAgIGNvbnN0IGVycm9yczogc3RyaW5nW10gPSBbXTtcbiAgICBjb25zdCB3YXJuaW5nczogc3RyaW5nW10gPSBbXTtcblxuICAgIHRyeSB7XG4gICAgICBjb25zdCBkb2N1bWVudDogU3ZnRG9jdW1lbnQgPSB7XG4gICAgICAgIHZpZXdCb3g6IHNwZWMudmlld0JveCxcbiAgICAgICAgZWxlbWVudHM6IHNwZWMuZWxlbWVudHMsXG4gICAgICAgIC4uLihzcGVjLndpZHRoICE9PSB1bmRlZmluZWQgJiYgeyB3aWR0aDogc3BlYy53aWR0aCB9KSxcbiAgICAgICAgLi4uKHNwZWMuaGVpZ2h0ICE9PSB1bmRlZmluZWQgJiYgeyBoZWlnaHQ6IHNwZWMuaGVpZ2h0IH0pLFxuICAgICAgICAuLi4oc3BlYy50aXRsZSAmJiB7IHRpdGxlOiBzcGVjLnRpdGxlIH0pLFxuICAgICAgICAuLi4oc3BlYy5kZXNjcmlwdGlvbiAmJiB7IGRlc2NyaXB0aW9uOiBzcGVjLmRlc2NyaXB0aW9uIH0pXG4gICAgICB9O1xuXG4gICAgICBpZiAoc3BlYy52YWxpZGF0ZSAhPT0gZmFsc2UpIHtcbiAgICAgICAgY29uc3QgdmFsaWRhdGlvbiA9IGF3YWl0IHRoaXMudmFsaWRhdGVEb2N1bWVudChkb2N1bWVudCk7XG4gICAgICAgIGVycm9ycy5wdXNoKC4uLnZhbGlkYXRpb24uZXJyb3JzKTtcbiAgICAgICAgd2FybmluZ3MucHVzaCguLi52YWxpZGF0aW9uLndhcm5pbmdzKTtcbiAgICAgICAgXG4gICAgICAgIGlmICghdmFsaWRhdGlvbi52YWxpZCkge1xuICAgICAgICAgIHRocm93IG5ldyBTdmdWYWxpZGF0aW9uRXJyb3IoJ0RvY3VtZW50IHZhbGlkYXRpb24gZmFpbGVkJywgeyBlcnJvcnMsIHdhcm5pbmdzIH0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHN2ZyA9IGF3YWl0IHRoaXMucmVuZGVyZXIucmVuZGVyKGRvY3VtZW50KTtcbiAgICAgIFxuICAgICAgY29uc3QgbWV0YWRhdGE6IERvY3VtZW50TWV0YWRhdGEgPSB7XG4gICAgICAgIGNvbXBsZXhpdHk6IGRvY3VtZW50LmVsZW1lbnRzLmxlbmd0aCA8IDEwID8gJ2xvdycgOiBkb2N1bWVudC5lbGVtZW50cy5sZW5ndGggPCAxMDAgPyAnbWVkaXVtJyA6ICdoaWdoJyxcbiAgICAgICAgZmVhdHVyZXM6IFsuLi5uZXcgU2V0KGRvY3VtZW50LmVsZW1lbnRzLm1hcChlbCA9PiBlbC50eXBlKSldLFxuICAgICAgICBhY2Nlc3NpYmlsaXR5OiB7XG4gICAgICAgICAgaGFzVGl0bGU6ICEhZG9jdW1lbnQudGl0bGUsXG4gICAgICAgICAgaGFzRGVzY3JpcHRpb246ICEhZG9jdW1lbnQuZGVzY3JpcHRpb25cbiAgICAgICAgfSxcbiAgICAgICAgY29tcGxpYW5jZTogJ3N2ZzIwJ1xuICAgICAgfTtcblxuICAgICAgY29uc3QgcHJvY2Vzc2luZ1RpbWUgPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lO1xuXG4gICAgICByZXR1cm4geyBkb2N1bWVudCwgc3ZnLCB3YXJuaW5ncywgZXJyb3JzLCBtZXRhZGF0YSwgcHJvY2Vzc2luZ1RpbWUgfTtcblxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBsb2dnZXIuZXJyb3IoJ0RvY3VtZW50IHByb2Nlc3NpbmcgZmFpbGVkJywgeyBlcnJvciwgc3BlYyB9KTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHZhbGlkYXRlRG9jdW1lbnQoZG9jdW1lbnQ6IFN2Z0RvY3VtZW50KTogUHJvbWlzZTx7XG4gICAgdmFsaWQ6IGJvb2xlYW47XG4gICAgZXJyb3JzOiBzdHJpbmdbXTtcbiAgICB3YXJuaW5nczogc3RyaW5nW107XG4gIH0+IHtcbiAgICBjb25zdCBlcnJvcnM6IHN0cmluZ1tdID0gW107XG4gICAgY29uc3Qgd2FybmluZ3M6IHN0cmluZ1tdID0gW107XG5cbiAgICBpZiAoZG9jdW1lbnQudmlld0JveC53aWR0aCA8PSAwKSB7XG4gICAgICBlcnJvcnMucHVzaCgnVmlld0JveCB3aWR0aCBtdXN0IGJlIHBvc2l0aXZlJyk7XG4gICAgfVxuICAgIGlmIChkb2N1bWVudC52aWV3Qm94LmhlaWdodCA8PSAwKSB7XG4gICAgICBlcnJvcnMucHVzaCgnVmlld0JveCBoZWlnaHQgbXVzdCBiZSBwb3NpdGl2ZScpO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICB2YWxpZDogZXJyb3JzLmxlbmd0aCA9PT0gMCxcbiAgICAgIGVycm9ycyxcbiAgICAgIHdhcm5pbmdzXG4gICAgfTtcbiAgfVxuXG4gIGdldFByb2Nlc3NpbmdTdGF0cygpOiB7XG4gICAgdG90YWxEb2N1bWVudHM6IG51bWJlcjtcbiAgICB0b3RhbFByb2Nlc3NpbmdUaW1lOiBudW1iZXI7XG4gICAgYXZlcmFnZVByb2Nlc3NpbmdUaW1lOiBudW1iZXI7XG4gIH0ge1xuICAgIC8vIFNpbXBsZSBzdGF0cyBmb3Igbm93XG4gICAgcmV0dXJuIHtcbiAgICAgIHRvdGFsRG9jdW1lbnRzOiAwLFxuICAgICAgdG90YWxQcm9jZXNzaW5nVGltZTogMCxcbiAgICAgIGF2ZXJhZ2VQcm9jZXNzaW5nVGltZTogMFxuICAgIH07XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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