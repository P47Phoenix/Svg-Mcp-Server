{"version":3,"names":["cov_2ku31c8d7f","actualCoverage","Logger","logLevel","constructor","b","f","s","shouldLog","level","levels","debug","info","warn","error","formatMessage","message","data","timestamp","Date","toISOString","prefix","toUpperCase","undefined","JSON","stringify","writeLog","formattedMessage","console","setLogLevel","getLogLevel","logger","process","env","LOG_LEVEL"],"sources":["C:\\GitHub\\Svg-Mcp-Server\\src\\utils\\logger.ts"],"sourcesContent":["/**\r\n * Logging utility for the SVG MCP Server\r\n */\r\n\r\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error';\r\n\r\nexport interface LogEntry {\r\n  timestamp: string;\r\n  level: LogLevel;\r\n  message: string;\r\n  data?: unknown;\r\n}\r\n\r\nclass Logger {\r\n  private logLevel: LogLevel;\r\n\r\n  constructor(logLevel: LogLevel = 'info') {\r\n    this.logLevel = logLevel;\r\n  }\r\n\r\n  private shouldLog(level: LogLevel): boolean {\r\n    const levels: Record<LogLevel, number> = {\r\n      debug: 0,\r\n      info: 1,\r\n      warn: 2,\r\n      error: 3,\r\n    };\r\n    \r\n    return levels[level] >= levels[this.logLevel];\r\n  }\r\n\r\n  private formatMessage(level: LogLevel, message: string, data?: unknown): string {\r\n    const timestamp = new Date().toISOString();\r\n    const prefix = `[${timestamp}] ${level.toUpperCase()}:`;\r\n    \r\n    if (data !== undefined) {\r\n      return `${prefix} ${message} ${JSON.stringify(data, null, 2)}`;\r\n    }\r\n    \r\n    return `${prefix} ${message}`;\r\n  }\r\n\r\n  private writeLog(level: LogLevel, message: string, data?: unknown): void {\r\n    if (!this.shouldLog(level)) {\r\n      return;\r\n    }\r\n\r\n    const formattedMessage = this.formatMessage(level, message, data);\r\n    \r\n    switch (level) {\r\n      case 'debug':\r\n        console.debug(formattedMessage);\r\n        break;\r\n      case 'info':\r\n        console.info(formattedMessage);\r\n        break;\r\n      case 'warn':\r\n        console.warn(formattedMessage);\r\n        break;\r\n      case 'error':\r\n        console.error(formattedMessage);\r\n        break;\r\n    }\r\n  }\r\n\r\n  debug(message: string, data?: unknown): void {\r\n    this.writeLog('debug', message, data);\r\n  }\r\n\r\n  info(message: string, data?: unknown): void {\r\n    this.writeLog('info', message, data);\r\n  }\r\n\r\n  warn(message: string, data?: unknown): void {\r\n    this.writeLog('warn', message, data);\r\n  }\r\n\r\n  error(message: string, data?: unknown): void {\r\n    this.writeLog('error', message, data);\r\n  }\r\n\r\n  setLogLevel(level: LogLevel): void {\r\n    this.logLevel = level;\r\n  }\r\n\r\n  getLogLevel(): LogLevel {\r\n    return this.logLevel;\r\n  }\r\n}\r\n\r\n// Export a default logger instance\r\nexport const logger = new Logger(\r\n  (process.env.LOG_LEVEL as LogLevel) || 'info'\r\n);\r\n"],"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","ignoreList":[]}